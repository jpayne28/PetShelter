AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pets_backend
  SAM Template for pets_backend

Resources:
  #Dynamodb table to store Pet records
  PetsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PetsTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
        
  #Dynamodb table to store adoption application records
  AdoptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AdoptionsTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
        
  #Explicit API to handle GET and POST requests sent to the backend
  PetsAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        
  # Lambda function to handle GET requests and retrieve all pet records 
  GetPetsLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: handlers/get_pets
        Handler: getPets.lambda_handler
        Runtime: python3.10
        Architectures: # Specifies the architecture for the Lambda function.
          - x86_64
        Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PetsTable
        Environment:  # Configures environment variables for Lambda functions.
          Variables: # Defines environment variable values for Lambda functions.
            # Environment variables for the DynamoDB table names
            PETS_TABLE: !Ref PetsTable
        Events: # Defines events that trigger the Lambda function.
          GetPetsApi: # Specifies an API Gateway event named GetPetsApi that triggers the Lambda function.
            Type: Api # Specifies that the event source is an API Gateway endpoint.
            Properties: # Defines properties of the API Gateway event.
              RestApiId: !Ref PetsAPI
              Path: /pets
              Method: get
              
  # Lambda function to handle GET requests and retrieve a all adoption records
  GetAdoptionsLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/get_adoptions
      Handler: getAdoptions.lambda_handler
      Runtime: python3.10
      Architectures: 
        - x86_64
      Policies:  
        - DynamoDBReadPolicy:
            TableName: !Ref AdoptionsTable
      Environment:  # Configures environment variables for Lambda functions.
        Variables: # Defines environment variable values for Lambda functions.
          # Environment variable for the DynamoDB table name
          ADOPTIONS_TABLE: !Ref AdoptionsTable
      Events:
        GetAdoptionsApi: 
          Type: Api 
          Properties: 
            RestApiId: !Ref PetsAPI
            Path: /adoptions
            Method: get
            
  # Lambda function to handle GET requests and retrieve a specific adoption record by ID 
  GetAdoptionLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/get_adoption
      Handler: getAdoption.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Policies: 
        - DynamoDBReadPolicy:
            TableName: !Ref AdoptionsTable
      Environment:
        Variables:
          ADOPTIONS_TABLE: !Ref AdoptionsTable
      Events:
        GetAdoptionApi:
          Type: Api
          Properties:
            RestApiId: !Ref PetsAPI
            Path: /adoptions/{id}
            Method: get
            
  # Lambda function to handle POST requests and create a new adoption record 
  CreateAdoptionLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/create_adoption
      Handler: createAdoption.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Policies: 
        - DynamoDBCrudPolicy:
            TableName: !Ref AdoptionsTable
      Environment:
        Variables:
          ADOPTIONS_TABLE: !Ref AdoptionsTable
      Events:
        CreateAdoptionApi:
          Type: Api
          Properties:
            RestApiId: !Ref PetsAPI
            Path: /adoptions
            Method: post
  
Outputs:
  # Output for the API Gateway endpoint URL
  PetsAPI:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${PetsAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  # Output for the /pets API endpoint
  GetPetsAPIEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Get Pets function"
    Value: !Sub "https://${PetsAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/pets/"
  # Output for the /adoptions API endpoint
  GetAdoptionsAPIEndpoint:
    Description: API Gateway endpoint URL for Prod stage for GetAdoptions function
    Value: !Sub "https://${PetsAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/adoptions/"
  # Output for the /adoptions/id API endpoint
  GetAdoptionAPIEndpoint:
    Description: API Gateway endpoint URL for Prod stage for GetAdoption function
    Value: !Sub "https://${PetsAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/adoptions/{id}"
  # Output for the /adoptions POST API endpoint
  CreateAdoptionAPIEndpoint:
    Description: API Gateway endpoint URL for Prod stage for CreateAdoption function
    Value: !Sub "https://${PetsAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/adoptions/"